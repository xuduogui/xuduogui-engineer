{"version":3,"file":"logx.js","sourceRoot":"./","sources":["src/config/logx.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAOA,4CAA6B;AAC7B,2CAA4B;AAE5B,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;AAEpC,MAAM,gBAAgB,GAAG;IACvB,SAAS,EAAE;QAET,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;QAE5B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,OAAO,MAAM,CAAC,EAAE;KACtF;IACD,UAAU,EAAE;QAEV,OAAO,EAAE,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;KAC5D;CACF,CAAA;AAED,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAEhC,MAAM,IAAI,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;AA6BrB,oBAAI;AArBZ,SAAS,cAAc,CAAC,QAAgB,EAAE,SAAqB,IAAI;IACjE,OAAO,CAAC,QAAa,EAAE,GAAG,GAAU,EAAE,EAAE;QACtC,QAAQ,QAAQ,EAAE;YAChB,KAAK,OAAO;gBACV,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAA;YACvC,KAAK,MAAM;gBACT,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAA;YACvC,KAAK,MAAM;gBACT,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAA;YACvC,KAAK,OAAO;gBACV,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAA;YACvC;gBACE,MAAM;SACT;IACH,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,CAAC,GAAG,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;AACtC,OAAO,CAAC,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;AACtC,OAAO,CAAC,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;AACtC,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC","sourcesContent":["/*\n * @Author: xuziyong\n * @Date: 2021-10-17 09:49:47\n * @LastEditors: xuziyong\n * @LastEditTime: 2021-10-17 15:53:27\n * @Description: TODO\n */\nimport * as log from 'log4js'\nimport * as path from 'path'\n\nconst timeNow = new Date().getTime()\n\nconst logConfigDefault = {\n  appenders: {\n    // 控制台输出\n    console: { type: 'console' },\n    // 日志文件\n    file: { type: 'file', filename: path.join(__dirname, `../logs/time-${timeNow}.log`) }\n  },\n  categories: {\n    // 默认日志\n    default: { appenders: ['file', 'console'], level: 'debug' },\n  }\n}\n\nlog.configure(logConfigDefault);\n\nconst logx = log.getLogger();\n\n/**\n * console 代理\n * @param logLevel 类型/级别\n * @param logger log4js实例\n * @return {function}\n */\nfunction createLogProxy(logLevel: string, logger: log.Logger = logx) {\n  return (messeage: any, ...arg: any[]) => {\n    switch (logLevel) {\n      case 'debug':\n        return logger.debug(messeage, ...arg)\n      case 'info':\n        return logger.debug(messeage, ...arg)\n      case 'warn':\n        return logger.debug(messeage, ...arg)\n      case 'error':\n        return logger.debug(messeage, ...arg)\n      default:\n        break;\n    }\n  };\n}\nconsole.log = createLogProxy('debug');\nconsole.info = createLogProxy('info');\nconsole.warn = createLogProxy('warn');\nconsole.error = createLogProxy('error');\n\nexport {logx}"]}